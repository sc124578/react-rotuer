{"ast":null,"code":"export const deletePost = ignoreAbortError(deletePostDelegate);\nexport const fetchUsersWithPosts = ignoreAbortError(fetchUsersWithPostsDelegate);\nexport const fetchUserWithPosts = ignoreAbortError(fetchUserWithPostsDelegate);\nfunction ignoreAbortError(delegate) {\n  return async function () {\n    try {\n      for (var _len = arguments.length, delegateArguments = new Array(_len), _key = 0; _key < _len; _key++) {\n        delegateArguments[_key] = arguments[_key];\n      }\n      return await delegate.apply(null, delegateArguments);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  };\n}\nasync function deletePostDelegate(postId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts/${postId}`;\n  const response = await fetch(url, {\n    method: \"DELETE\",\n    signal\n  });\n  return response.json();\n}\nasync function fetchUserWithPostsDelegate(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/users/${userId}`;\n  const response = await fetch(url, {\n    signal\n  });\n  if (response.status !== 200) {\n    throw new Error(`User not found with ID: ${userId}`);\n  }\n  const user = await response.json();\n  user.posts = await fetchPostsForUser(userId, signal);\n  return user;\n}\nasync function fetchUsersWithPostsDelegate(signal) {\n  try {\n    const users = await fetchUsers(signal);\n    return await Promise.all(users.map(user => fetchPostsForUser(user.id, signal).then(posts => {\n      user.posts = posts;\n      return user;\n    })));\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\nasync function fetchUsers(signal) {\n  const url = `https://jsonplaceholder.typicode.com/users`;\n  const response = await fetch(url, {\n    signal\n  });\n  const test = response.json();\n  return test;\n}\nasync function fetchPostsForUser(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n  const response = await fetch(url, {\n    signal\n  });\n  return response.json();\n}","map":{"version":3,"names":["deletePost","ignoreAbortError","deletePostDelegate","fetchUsersWithPosts","fetchUsersWithPostsDelegate","fetchUserWithPosts","fetchUserWithPostsDelegate","delegate","delegateArguments","apply","error","name","postId","signal","url","response","fetch","method","json","userId","status","Error","user","posts","fetchPostsForUser","users","fetchUsers","Promise","all","map","id","then","test"],"sources":["C:/Users/scott/thinkful-work/react-router-ass/src/api/index.js"],"sourcesContent":["export const deletePost = ignoreAbortError(deletePostDelegate);\nexport const fetchUsersWithPosts = ignoreAbortError(\n  fetchUsersWithPostsDelegate\n);\nexport const fetchUserWithPosts = ignoreAbortError(fetchUserWithPostsDelegate);\n\nfunction ignoreAbortError(delegate) {\n  return async (...delegateArguments) => {\n    try {\n      return await delegate.apply(null, delegateArguments);\n    } catch (error) {\n      if (error.name !== \"AbortError\") {\n        throw error;\n      }\n    }\n  };\n}\n\nasync function deletePostDelegate(postId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts/${postId}`;\n  const response = await fetch(url, { method: \"DELETE\", signal });\n  return response.json();\n}\n\nasync function fetchUserWithPostsDelegate(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/users/${userId}`;\n  const response = await fetch(url, { signal });\n  if (response.status !== 200) {\n    throw new Error(`User not found with ID: ${userId}`);\n  }\n  const user = await response.json();\n  user.posts = await fetchPostsForUser(userId, signal);\n  return user;\n}\n\nasync function fetchUsersWithPostsDelegate(signal) {\n  try {\n    const users = await fetchUsers(signal);\n    return await Promise.all(\n      users.map((user) =>\n        fetchPostsForUser(user.id, signal).then((posts) => {\n          user.posts = posts;\n          return user;\n        })\n      )\n    );\n  } catch (error) {\n    if (error.name !== \"AbortError\") {\n      throw error;\n    }\n  }\n}\n\nasync function fetchUsers(signal) {\n  const url = `https://jsonplaceholder.typicode.com/users`;\n  const response = await fetch(url, { signal });\n  const test = response.json()\n  return test;\n}\n\nasync function fetchPostsForUser(userId, signal) {\n  const url = `https://jsonplaceholder.typicode.com/posts?userId=${userId}`;\n  const response = await fetch(url, { signal });\n  return response.json();\n}\n"],"mappings":"AAAA,OAAO,MAAMA,UAAU,GAAGC,gBAAgB,CAACC,kBAAkB,CAAC;AAC9D,OAAO,MAAMC,mBAAmB,GAAGF,gBAAgB,CACjDG,2BAA2B,CAC5B;AACD,OAAO,MAAMC,kBAAkB,GAAGJ,gBAAgB,CAACK,0BAA0B,CAAC;AAE9E,SAASL,gBAAgB,CAACM,QAAQ,EAAE;EAClC,OAAO,kBAAgC;IACrC,IAAI;MAAA,kCADWC,iBAAiB;QAAjBA,iBAAiB;MAAA;MAE9B,OAAO,MAAMD,QAAQ,CAACE,KAAK,CAAC,IAAI,EAAED,iBAAiB,CAAC;IACtD,CAAC,CAAC,OAAOE,KAAK,EAAE;MACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;QAC/B,MAAMD,KAAK;MACb;IACF;EACF,CAAC;AACH;AAEA,eAAeR,kBAAkB,CAACU,MAAM,EAAEC,MAAM,EAAE;EAChD,MAAMC,GAAG,GAAI,8CAA6CF,MAAO,EAAC;EAClE,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAAEG,MAAM,EAAE,QAAQ;IAAEJ;EAAO,CAAC,CAAC;EAC/D,OAAOE,QAAQ,CAACG,IAAI,EAAE;AACxB;AAEA,eAAeZ,0BAA0B,CAACa,MAAM,EAAEN,MAAM,EAAE;EACxD,MAAMC,GAAG,GAAI,8CAA6CK,MAAO,EAAC;EAClE,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAAED;EAAO,CAAC,CAAC;EAC7C,IAAIE,QAAQ,CAACK,MAAM,KAAK,GAAG,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAE,2BAA0BF,MAAO,EAAC,CAAC;EACtD;EACA,MAAMG,IAAI,GAAG,MAAMP,QAAQ,CAACG,IAAI,EAAE;EAClCI,IAAI,CAACC,KAAK,GAAG,MAAMC,iBAAiB,CAACL,MAAM,EAAEN,MAAM,CAAC;EACpD,OAAOS,IAAI;AACb;AAEA,eAAelB,2BAA2B,CAACS,MAAM,EAAE;EACjD,IAAI;IACF,MAAMY,KAAK,GAAG,MAAMC,UAAU,CAACb,MAAM,CAAC;IACtC,OAAO,MAAMc,OAAO,CAACC,GAAG,CACtBH,KAAK,CAACI,GAAG,CAAEP,IAAI,IACbE,iBAAiB,CAACF,IAAI,CAACQ,EAAE,EAAEjB,MAAM,CAAC,CAACkB,IAAI,CAAER,KAAK,IAAK;MACjDD,IAAI,CAACC,KAAK,GAAGA,KAAK;MAClB,OAAOD,IAAI;IACb,CAAC,CAAC,CACH,CACF;EACH,CAAC,CAAC,OAAOZ,KAAK,EAAE;IACd,IAAIA,KAAK,CAACC,IAAI,KAAK,YAAY,EAAE;MAC/B,MAAMD,KAAK;IACb;EACF;AACF;AAEA,eAAegB,UAAU,CAACb,MAAM,EAAE;EAChC,MAAMC,GAAG,GAAI,4CAA2C;EACxD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAAED;EAAO,CAAC,CAAC;EAC7C,MAAMmB,IAAI,GAAGjB,QAAQ,CAACG,IAAI,EAAE;EAC5B,OAAOc,IAAI;AACb;AAEA,eAAeR,iBAAiB,CAACL,MAAM,EAAEN,MAAM,EAAE;EAC/C,MAAMC,GAAG,GAAI,qDAAoDK,MAAO,EAAC;EACzE,MAAMJ,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,EAAE;IAAED;EAAO,CAAC,CAAC;EAC7C,OAAOE,QAAQ,CAACG,IAAI,EAAE;AACxB"},"metadata":{},"sourceType":"module"}